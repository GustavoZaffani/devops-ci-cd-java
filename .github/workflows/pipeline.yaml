name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main

#on:
#  issue_comment:
#    types: [created]
#  pull_request:
#    types: [ closed ]

jobs:
  build-and-tests:
#    if: contains(github.event.comment.body, '/ok-to-test')
    name: Build and Tests
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve pull request branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: pull-request-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.pull-request-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: pending
          context: "Build and Tests"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pull-request-branch.outputs.head_ref }}

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run tests
        run: mvn test

      - name: Generate Jacoco report
        run: mvn jacoco:report

      - name: Sonar scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: | 
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.pullrequest.key=${{ github.event.number }} \
          -Dsonar.pullrequest.branch=${{ steps.pull-request-branch.outputs.head_ref }} \
          -Dsonar.pullrequest.base=${{ steps.pull-request-branch.outputs.base_ref }} \
          -Dsonar.github.repository=${{ github.repository }}
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.pull-request-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: ${{ job.status }}
          context: "Build and Tests"

  docker-build:
    if: contains(github.event.comment.body, '/ok-to-sandbox')
    name: Docker build
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve pull request branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: docker-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.docker-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: pending
          context: "Docker build"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.docker-branch.outputs.head_ref }}

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build
        run: docker build -t ${{ secrets.DOCKER_IMAGE }} .

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_IMAGE }}

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.docker-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: ${{ job.status }}
          context: "Docker build"

  deploy-sandbox:
    if: contains(github.event.comment.body, '/ok-to-sandbox')
    name: Deploy to Sandbox
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve pull request branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: deploy-sandbox-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.deploy-sandbox-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: pending
          context: "Deploy to Sandbox"

      - name: Deploy to Sandbox
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SANDBOX_HOST }}
          username: ${{ secrets.SANDBOX_USER }}
          key: ${{ secrets.SANDBOX_KEY }}
          script: |
            echo "Deploying to sandbox..."
            docker rm sandbox -f
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker run -d --name sandbox -p 8080:8080 ${{ secrets.DOCKER_IMAGE }}
            echo "Deployed to sandbox!"

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.deploy-sandbox-branch.outputs.head_sha }}
          token: ${{ secrets.GB_TOKEN }}
          status: ${{ job.status }}
          context: "Deploy to Sandbox"

  deploy-production:
    if: github.event.pull_request.merged == true
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_KEY }}
          script: |
            echo "Deploying to production..."
            docker rm production -f
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker run -d --name production -p 18080:8080 ${{ secrets.DOCKER_IMAGE }}
            echo "Deployed to production!"

